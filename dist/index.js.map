{"version":3,"sources":["../dist-esnext/index.js"],"names":["AI","J","rl","createInterface","input","process","stdin","output","stdout","getMenu","isAiTurn","game","Game","getPlayerTurn","isAi","askForMove","console","log","Board","printUnicodeBoard","board","aiMove","getComputerMove","Move","getGameAfterMove","question","m","move","from","x","Number","y","to","playAi","createGame","players","black","name","white","playOffline","openMenu","answer","close"],"mappings":";;AAAA;;;;AACA;;IAAYA,E;;AACZ;;IAAYC,C;;AACZ;;;;;;;;AACA,IAAMC,KAAK,mBAASC,eAAT,CAAyB;AAChCC,WAAOC,QAAQC,KADiB;AAEhCC,YAAQF,QAAQG;AAFgB,CAAzB,CAAX;AAIA,IAAMC,UAAU,SAAVA,OAAU;AAAA,WAAM,oCAClB,0BADkB,GAElB,mBAFkB,GAGlB,qBAHkB,GAIlB,aAJY;AAAA,CAAhB;AAKA,IAAMC,WAAW,SAAXA,QAAW,CAACC,IAAD;AAAA,WAAUV,EAAEW,IAAF,CAAOC,aAAP,CAAqBF,IAArB,EAA2BG,IAArC;AAAA,CAAjB;AACA,SAASC,UAAT,CAAoBJ,IAApB,EAA0B;AACtBK,YAAQC,GAAR,CAAYhB,EAAEiB,KAAF,CAAQC,iBAAR,CAA0BR,KAAKS,KAA/B,CAAZ;AACA,QAAIV,SAASC,IAAT,CAAJ,EAAoB;AAChB,YAAMU,SAASrB,GAAGsB,eAAH,CAAmBX,IAAnB,CAAf;AACA,eAAOI,WAAWd,EAAEsB,IAAF,CAAOC,gBAAP,CAAwBb,IAAxB,EAA8BU,MAA9B,CAAX,CAAP;AACH;AACDnB,OAAGuB,QAAH,CAAY,0BAAZ,EAAwC,UAACC,CAAD,EAAO;AAC3C,YAAMC,OAAO;AACTC,kBAAM,EAAEC,GAAGC,OAAOJ,EAAE,CAAF,CAAP,CAAL,EAAmBK,GAAGD,OAAOJ,EAAE,CAAF,CAAP,CAAtB,EADG;AAETM,gBAAI,EAAEH,GAAGC,OAAOJ,EAAE,CAAF,CAAP,CAAL,EAAmBK,GAAGD,OAAOJ,EAAE,CAAF,CAAP,CAAtB;AAFK,SAAb;AAIAX,mBAAWd,EAAEsB,IAAF,CAAOC,gBAAP,CAAwBb,IAAxB,EAA8BgB,IAA9B,CAAX;AACH,KAND;AAOH;AACD,SAASM,MAAT,GAAkB;AACd,QAAMtB,OAAOV,EAAEW,IAAF,CAAOsB,UAAP,CAAkB;AAC3BC,iBAAS;AACLC,mBAAO,EAAEtB,MAAM,IAAR,EAAcuB,MAAM,OAApB,EADF;AAELC,mBAAO,EAAED,MAAM,OAAR;AAFF;AADkB,KAAlB,CAAb;AAMAtB,eAAWJ,IAAX;AACH;AACD,SAAS4B,WAAT,GAAuB;AACnB,QAAM5B,OAAOV,EAAEW,IAAF,CAAOsB,UAAP,EAAb;AACAnB,eAAWJ,IAAX;AACH;AACD,SAAS6B,QAAT,GAAoB;AAChB;AACAtC,OAAGuB,QAAH,CAAYhB,SAAZ,EAAuB,UAACgC,MAAD,EAAY;AAC/B,gBAAQA,MAAR;AACI,iBAAK,GAAL;AAAU,uBAAOR,QAAP;AACV,iBAAK,GAAL;AAAU,uBAAOM,aAAP;AACV,iBAAK,GAAL;AAAU,uBAAOrC,GAAGwC,KAAH,EAAP;AACV;AACI1B,wBAAQC,GAAR,CAAY,iBAAZ;AACAuB;AANR;AAQH,KATD;AAUH;AACDA;AACA","file":"index.js","sourcesContent":["import clear from 'clear';\nimport * as AI from 'joj-ai';\nimport * as J from 'joj-core';\nimport readline from 'readline';\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\nconst getMenu = () => 'Welcome to Jump Over Jump! \\n\\n' +\n    'What do you wanna do? \\n' +\n    '1 - Play vs AI \\n' +\n    '2 - Play offline \\n' +\n    '0 - quit \\n';\nconst isAiTurn = (game) => J.Game.getPlayerTurn(game).isAi;\nfunction askForMove(game) {\n    console.log(J.Board.printUnicodeBoard(game.board));\n    if (isAiTurn(game)) {\n        const aiMove = AI.getComputerMove(game);\n        return askForMove(J.Move.getGameAfterMove(game, aiMove));\n    }\n    rl.question('Move (fromXfromYtoXtoY):', (m) => {\n        const move = {\n            from: { x: Number(m[0]), y: Number(m[1]) },\n            to: { x: Number(m[2]), y: Number(m[3]) }\n        };\n        askForMove(J.Move.getGameAfterMove(game, move));\n    });\n}\nfunction playAi() {\n    const game = J.Game.createGame({\n        players: {\n            black: { isAi: true, name: 'black' },\n            white: { name: 'white' }\n        }\n    });\n    askForMove(game);\n}\nfunction playOffline() {\n    const game = J.Game.createGame();\n    askForMove(game);\n}\nfunction openMenu() {\n    clear();\n    rl.question(getMenu(), (answer) => {\n        switch (answer) {\n            case '1': return playAi();\n            case '2': return playOffline();\n            case '0': return rl.close();\n            default:\n                console.log('invalid answer!');\n                openMenu();\n        }\n    });\n}\nopenMenu();\n//# sourceMappingURL=index.js.map"]}